my_breaks <- c(30, 15, 5, 0, -5, -15, -30)
world <- mutate(world, intervals = cut(world$change, breaks = my_breaks,
labels = my_labels))
library("dplyr")
library("tidyr")
library("ggplot2")
library("maps")
library("hexbin")
library("mapproj")
# Data
forest_area_cleaned <- read.csv("data/WBI_Forest_Area_Cleaned.csv", stringsAsFactors = FALSE)
definition_and_source <- read.csv("data/WBI_Definition_and_Source.csv", stringsAsFactors = FALSE)
# Specific data
forest_area_cleaned_sqkm <- forest_area_cleaned %>%
filter(Series.Code == "AG.LND.FRST.K2")
forest_area_cleaned_land_area <- forest_area_cleaned %>%
filter(Series.Code == "AG.LND.FRST.ZS")
forest_area_cleaned_GDP <- forest_area_cleaned %>%
filter(Series.Code == "NY.GDP.MKTP.KD")
#########################
###FIRST VISUALIZATION###
#########################
# Data frame of the average forest area cleaned by land area world-wide over a span of 25 years.
average_forested_areas_land <- forest_area_cleaned_land_area %>%
summarize(
avg_land_1992 = mean(YR1992, na.rm = TRUE),
avg_land_1993 = mean(YR1993, na.rm = TRUE),
avg_land_1994 = mean(YR1994, na.rm = TRUE),
avg_land_1995 = mean(YR1995, na.rm = TRUE),
avg_land_1996 = mean(YR1996, na.rm = TRUE),
avg_land_1997 = mean(YR1997, na.rm = TRUE),
avg_land_1998 = mean(YR1998, na.rm = TRUE),
avg_land_1999 = mean(YR1999, na.rm = TRUE),
avg_land_2000 = mean(YR2000, na.rm = TRUE),
avg_land_2001 = mean(YR2001, na.rm = TRUE),
avg_land_2002 = mean(YR2002, na.rm = TRUE),
avg_land_2003 = mean(YR2003, na.rm = TRUE),
avg_land_2004 = mean(YR2004, na.rm = TRUE),
avg_land_2005 = mean(YR2005, na.rm = TRUE),
avg_land_2006 = mean(YR2006, na.rm = TRUE),
avg_land_2007 = mean(YR2007, na.rm = TRUE),
avg_land_2008 = mean(YR2008, na.rm = TRUE),
avg_land_2009 = mean(YR2009, na.rm = TRUE),
avg_land_2010 = mean(YR2010, na.rm = TRUE),
avg_land_2011 = mean(YR2011, na.rm = TRUE),
avg_land_2012 = mean(YR2012, na.rm = TRUE),
avg_land_2013 = mean(YR2013, na.rm = TRUE),
avg_land_2014 = mean(YR2014, na.rm = TRUE),
avg_land_2015 = mean(YR2015, na.rm = TRUE),
avg_land_2016 = mean(YR2016, na.rm = TRUE)
) %>%
gather(
key = year,
value = average_forested_areas_land,
avg_land_1992:avg_land_2016
) %>%
mutate(
measure = substr(year, 1, nchar(year) - 5),
year = as.numeric((substr(year, nchar(year) - 3, nchar(year))))
) %>%
spread(
key = measure,
value = average_forested_areas_land
)
# Plot for average forest area cleaned by land area.
average_land_plot <-
ggplot(data = average_forested_areas_land) +
geom_line(mapping = aes(x = year, y = avg_land), color = "light blue") +
geom_point(mapping = aes(x = year, y = avg_land)) +
ylim(31.75, 32.60) +
labs(
title = "Time vs. Average Forest Area World-Wide",
x = "Time (year)",
y = "Average Forest Area Cleaned (% of land area)"
)
##########################
###SECOND VISUALIZATION###
##########################
# Data frame of GDP values and forest land area in 2016.
land_area_2016 <- forest_area_cleaned_land_area %>%
select(Country.Name, YR2016)
GDP <- forest_area_cleaned_GDP %>%
select(Country.Name, YR2016)
forest_area_GDP_2016 <- full_join(land_area_2016, GDP, by = "Country.Name")
forest_area_GDP_2016 <- forest_area_GDP_2016 %>%
rename(land_area = YR2016.x, GDP = YR2016.y)
# Hexbin plot of GDP vs forest land area in 2016.
forest_area_GDP_2016_plot <- ggplot(forest_area_GDP_2016) +
geom_hex(mapping = aes(x = GDP, y = land_area)) +
labs(
title = "GDP vs. Forest Area in 2016",
x = "GDP (constant 2010 US$)",
y = "Forest area (% of land area)"
)
#########################
###THIRD VISUALIZATION###
#########################
#Data frame of the change in forest area levels for each country over time (1992-2016).
change_in_forest_lvls_over_time <- forest_area_cleaned_land_area %>%
mutate(change = YR2016 - YR1992) %>%
select(Country.Name, Country.Code, change)
# World map data to visualize
world <- map_data("world")
world <- world %>%
rename(Country.Name = region) %>%
mutate(Country.Code = iso.alpha(world$region, n = 3)) %>%
left_join(change_in_forest_lvls_over_time)
my_labels <- c("30% ~ 15%", "15% ~ 5%", "5% ~ 0%", "0% ~ -5%", "-5% ~ -15%", "-15% ~ -30%")
my_breaks <- c(30, 15, 5, 0, -5, -15, -30)
world <- mutate(world, intervals = cut(world$change, breaks = my_breaks,
labels = my_labels))
# Map visualization of the change in forest levels over time.
change_in_forest_lvls_over_time_map <- ggplot(data = world) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = intervals),
color = "white",
size = .1
) +
coord_map() +
scale_fill_brewer(palette = "OrRd") +
labs(
title = "Change in Forestry Levels Over Time",
fill = "Change"
)
change_in_forest_lvls_over_time_map
setwd("C:/Users/kayla/Desktop/INFO_201/info201-groupaa5-final-project")
#Import the needed libraries
library("shiny")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(hdi_data)
# range of years
colnames <- colnames(hdi_data)
colnames <- colnames[3:17]
years <- as.character(substr(colnames, 3, nchar(colnames)))
years
years <- as.character(substr(colnames, 5, nchar(colnames)))
years
colnames <- colnames[3:27]
years <- as.character(substr(colnames, 5, nchar(colnames)))
years
# range of years
colnames <- colnames(hdi_data)
colnames <- colnames[3:27]
years <- as.character(substr(colnames, 5, nchar(colnames)))
years
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(world_CO2)
plot_CO2_data
View(plot_CO2_data)
world_HDI <- full_join(plot_HDI_data, world, by = "Country")
# World map data to visualize
world <- map_data("world")
world_HDI <- world %>%
rename(Country = region)
#plot data for CO2
plot_CO2_data <- co2_data %>%
gather(
key = Year,
value = co2_data,
co2_1990:co2_2014
) %>%
mutate(
Year = as.numeric((substr(Year, nchar(Year) - 3, nchar(Year))))
)
plot_CO2_data$rank_2017 <- NULL
#plot data for HDI
plot_HDI_data <- hdi_data %>%
gather(
key = Year,
value = hdi_data,
HDI_1990:HDI_2017
) %>%
mutate(
Year = as.numeric((substr(Year, nchar(Year) - 3, nchar(Year))))
)
plot_HDI_data$rank_2017 <- NULL
#plot data for CO2
plot_CO2_data <- co2_data %>%
gather(
key = Year,
value = co2_data,
co2_1990:co2_2014
) %>%
mutate(
Year = as.numeric((substr(Year, nchar(Year) - 3, nchar(Year))))
)
plot_CO2_data$rank_2017 <- NULL
# World map data to visualize
world <- map_data("world")
world_HDI <- world %>%
rename(Country = region)
world_HDI <- full_join(plot_HDI_data, world, by = "Country")
View(world)
world_HDI <- full_join(plot_HDI_data, world_HDI, by = "Country")
View(world_HDI)
world_HDI <- world %>%
rename(Country = region) %>%
left_join(plot_HDI_data, by = "Country")
world_HDI <- world %>%
rename(Country = region) %>%
right_join(plot_HDI_data, by = "Country")
world_CO2 <- world %>%
rename(Country = region) %>%
right_join(plot_CO2_data, by = "Country")
View(hdi_data)
world <- map_data("world")
#plot data for HDI
plot_HDI_data <- hdi_data %>%
gather(
key = Year,
value = hdi_data,
HDI_1990:HDI_2017
) %>%
mutate(
Year = as.numeric((substr(Year, nchar(Year) - 3, nchar(Year)))),
Country.Code = iso.alpha(world$region, n = 3)
)
plot_HDI_data$rank_2017 <- NULL
#plot data for CO2
plot_CO2_data <- co2_data %>%
gather(
key = Year,
value = co2_data,
co2_1990:co2_2014
) %>%
mutate(
Year = as.numeric((substr(Year, nchar(Year) - 3, nchar(Year)))),
Country.Code = iso.alpha(world$region, n = 3)
)
plot_CO2_data$rank_2017 <- NULL
# World map data to visualize
world_HDI <- world %>%
rename(Country = region) %>%
mutate(Country.Code = iso.alpha(world$region, n = 3)) %>%
left_join(plot_HDI_data)
world_CO2 <- world %>%
rename(Country = region) %>%
mutate(Country.Code = iso.alpha(world$region, n = 3)) %>%
left_join(plot_CO2_data)
#plot data for HDI
plot_HDI_data <- hdi_data %>%
gather(
key = Year,
value = hdi_data,
HDI_1990:HDI_2017
) %>%
mutate(
Year = as.numeric((substr(Year, nchar(Year) - 3, nchar(Year)))),
Country.Code = iso.alpha(hdi_data$Country, n = 3)
)
hdi_data$Country
#plot data for HDI
plot_HDI_data <- hdi_data %>%
gather(
key = Year,
value = hdi_data,
HDI_1990:HDI_2017
) %>%
mutate(
Year = as.numeric((substr(Year, nchar(Year) - 3, nchar(Year)))),
Country.Code = iso.alpha(hdi_data$Country, n = 3)
)
is.vector(hdi_data)
is.data.frame(hdi_data)
library("dplyr")
library("tidyr")
library("maps")
library("mapproj")
library("ggplot2")
# Carbon dioxide emissions per capita and Human Development Index
# Data is from http://hdr.undp.org/en/data#
co2_data <- read.csv("data/Carbon dioxide emissions per capita (tonnes).csv", stringsAsFactors = FALSE)
hdi_data <- read.csv("data/Human Development Index (HDI).csv", stringsAsFactors = FALSE)
hdi_data <- hdi_data[, colSums(is.na(hdi_data)) < nrow(hdi_data)] %>% #delete na values
rename(rank_2017 = HDI.Rank..2017.)
names(hdi_data)[3:30] <- gsub("X", "HDI_", names(hdi_data)[3:30]) #change colnames
co2_data <- co2_data[, colSums(is.na(co2_data)) < nrow(co2_data)] %>% #delete na values
rename(rank_2017 = HDI.Rank..2017.)
names(co2_data)[3:11] <- gsub("X", "co2_", names(co2_data)[3:11]) #change colnames
# range of years
colnames <- colnames(hdi_data)
colnames <- colnames[3:27]
years <- as.character(substr(colnames, 5, nchar(colnames)))
world <- map_data("world")
#plot data for HDI
plot_HDI_data <- hdi_data %>%
gather(
key = Year,
value = hdi_data,
HDI_1990:HDI_2017
) %>%
mutate(
Year = as.numeric((substr(Year, nchar(Year) - 3, nchar(Year)))),
Country.Code = iso.alpha(hdi_data$Country, n = 3)
)
is.vector(hdi_data$Country)
is.data.frame(hdi_data$Country)
as.data.frame(hdi_data$Country)
hdi_data$Country <- as.data.frame(hdi_data$Country)
co2_data$Country <- as.data.frame(co2_data$Country)
View(hdi_data)
#plot data for HDI
plot_HDI_data <- hdi_data %>%
gather(
key = Year,
value = hdi_data,
HDI_1990:HDI_2017
) %>%
rename(Country = Country.hdi_data$Country) %>%
mutate(
Year = as.numeric((substr(Year, nchar(Year) - 3, nchar(Year)))),
Country.Code = iso.alpha(hdi_data$Country, n = 3)
)
#plot data for HDI
plot_HDI_data <- hdi_data %>%
gather(
key = Year,
value = hdi_data,
HDI_1990:HDI_2017
) %>%
rename(Country = "Country.hdi_data$Country") %>%
mutate(
Year = as.numeric((substr(Year, nchar(Year) - 3, nchar(Year)))),
Country.Code = iso.alpha(hdi_data$Country, n = 3)
)
library("dplyr")
library("tidyr")
library("maps")
library("mapproj")
library("ggplot2")
# Carbon dioxide emissions per capita and Human Development Index
# Data is from http://hdr.undp.org/en/data#
co2_data <- read.csv("data/Carbon dioxide emissions per capita (tonnes).csv", stringsAsFactors = FALSE)
hdi_data <- read.csv("data/Human Development Index (HDI).csv", stringsAsFactors = FALSE)
hdi_data <- hdi_data[, colSums(is.na(hdi_data)) < nrow(hdi_data)] %>% #delete na values
rename(rank_2017 = HDI.Rank..2017.)
names(hdi_data)[3:30] <- gsub("X", "HDI_", names(hdi_data)[3:30]) #change colnames
co2_data <- co2_data[, colSums(is.na(co2_data)) < nrow(co2_data)] %>% #delete na values
rename(rank_2017 = HDI.Rank..2017.)
names(co2_data)[3:11] <- gsub("X", "co2_", names(co2_data)[3:11]) #change colnames
# range of years
colnames <- colnames(hdi_data)
colnames <- colnames[3:27]
years <- as.character(substr(colnames, 5, nchar(colnames)))
#plot data for HDI
plot_HDI_data <- hdi_data %>%
gather(
key = Year,
value = hdi_data,
HDI_1990:HDI_2017
) %>%
mutate(
Year = as.numeric((substr(Year, nchar(Year) - 3, nchar(Year)))),
Country.Code = iso.alpha(hdi_data$Country, n = 3)
)
View(hdi_data)
#plot data for HDI
plot_HDI_data <- hdi_data %>%
gather(
key = Year,
value = hdi_data,
HDI_1990:HDI_2017
) %>%
mutate(
Year = as.numeric((substr(Year, nchar(Year) - 3, nchar(Year))))
)
View(plot_HDI_data)
plot_HDI_data$rank_2017 <- NULL
#plot data for CO2
plot_CO2_data <- co2_data %>%
gather(
key = Year,
value = co2_data,
co2_1990:co2_2014
) %>%
mutate(
Year = as.numeric((substr(Year, nchar(Year) - 3, nchar(Year))))
)
plot_CO2_data$rank_2017 <- NULL
# World map data to visualize
world <- map_data("world")
View(world)
world_HDI <- world %>%
rename(Country = region) %>%
mutate(Country.Code = iso.alpha(world$region, n = 3)) %>%
left_join(plot_HDI_data)
View(world_HDI)
shiny::runApp()
#Import the needed libraries
library("shiny")
library("dplyr")
library("ggplot2")
library("tidyr")
source("data.R")
runApp()
world_HDI <- world %>%
rename(Country = region) %>%
mutate(Country.Code = iso.alpha(world$region, n = 3)) %>%
left_join(plot_HDI_data)
world_CO2 <- world %>%
rename(Country = region) %>%
mutate(Country.Code = iso.alpha(world$region, n = 3)) %>%
left_join(plot_CO2_data)
runApp()
View(hdi_data)
View(co2_data)
runApp()
runApp()
runApp()
View(hdi_data)
library("DT")
# Produces a summary of descriptive statistics of each year in the 'hdi_data' data frame
hdi_summary_1 <- as.data.frame(do.call(cbind, lapply(hdi_data[3:14], summary)))
hdi_summary_2 <- as.data.frame(do.call(cbind, lapply(hdi_data[15:27], summary)))
# Produces a summary of descriptive statistics of each year in the 'co2_data' data frame
co2_summary <- as.data.frame(do.call(cbind, lapply(co2_data[3:11], summary)))
# Produces a summary of descriptive statistics of each year in the 'hdi_data' data frame
hdi_summary <- as.data.frame(do.call(cbind, lapply(hdi_data[3:27], summary)))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(world)
View(hdi_data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
is.vector(co2_data$Country)
is.vector(years)
View(co2_data$Country)
runApp()
#plot data for HDI
plot_HDI_data <- hdi_data %>%
gather(
key = Year,
value = hdi_data,
HDI_1990:HDI_2017
) %>%
mutate(
Year = as.numeric((substr(Year, nchar(Year) - 3, nchar(Year))))
)
plot_HDI_data$rank_2017 <- NULL
#plot data for CO2
plot_CO2_data <- co2_data %>%
gather(
key = Year,
value = co2_data,
co2_1990:co2_2014
) %>%
mutate(
Year = as.numeric((substr(Year, nchar(Year) - 3, nchar(Year))))
)
plot_CO2_data$rank_2017 <- NULL
# World map data to visualize
world <- map_data("world")
world_HDI <- world %>%
rename(Country = region) %>%
left_join(plot_HDI_data)
world_CO2 <- world %>%
rename(Country = region) %>%
left_join(plot_CO2_data)
View(world_HDI)
runApp()
runApp()
mutate(plot_HDI_data, Country.Code = iso.alpha(world$region, n = 3))
mutate(plot_HDI_data, Country.Code = iso.alpha(hdi_data$Country), n = 3))
mutate(plot_HDI_data, Country.Code = iso.alpha(hdi_data$Country), n = 3)
# KAYLA
countries <- hdi_data$Country
# KAYLA
countries <- as.character(hdi_data$Country)
mutate(plot_HDI_data, Country.Code = iso.alpha(countries), n = 3)
View(countries)
is.vector(countries)
#plot data for CO2
plot_CO2_data <- co2_data %>%
gather(
key = Year,
value = co2_data,
co2_1990:co2_2014
) %>%
mutate(
Year = as.numeric((substr(Year, nchar(Year) - 3, nchar(Year))))
)
plot_CO2_data$rank_2017 <- NULL
mutate(plot_CO2_data, Country.Code = iso.alpha(countries), n = 3)
